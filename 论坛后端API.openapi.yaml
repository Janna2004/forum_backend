openapi: 3.0.0
info:
  title: 论坛后端API
  description: 论坛后端系统的WebRTC视频流WebSocket接口，用于实现实时视频通信功能
  version: 1.0.0
tags:
  - name: 用户认证
  - name: 帖子管理
  - name: AI对话
  - name: 个人信息管理
  - name: 简历管理
  - name: interviews
  - name: 职位管理
    description: 职位信息相关接口
  - name: 知识库管理
    description: 面试知识库相关接口
  - name: WebRTC
    description: WebRTC相关接口
paths:
  /users/register/:
    post:
      summary: 用户注册
      deprecated: false
      description: 创建新用户账户
      tags:
        - 用户认证
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  description: 用户名
                  example: testuser
                password:
                  type: string
                  description: 密码
                  example: password123
      responses:
        '200':
          description: 注册成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: 注册成功
                  user_id:
                    type: integer
                    example: 1
          headers: {}
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 用户名和密码不能为空
          headers: {}
        '405':
          description: 方法不允许
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 仅支持POST请求
          headers: {}
      security: []
  /users/login/:
    post:
      summary: 用户登录
      deprecated: false
      description: 用户登录并返回JWT令牌
      tags:
        - 用户认证
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  description: 用户名
                  example: testuser
                password:
                  type: string
                  description: 密码
                  example: password123
            examples: {}
      responses:
        '200':
          description: 登录成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT令牌
                    example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...
                  msg:
                    type: string
                    example: 登录成功
                  user_id:
                    type: string
                  username:
                    type: string
                required:
                  - user_id
                  - username
          headers: {}
        '400':
          description: 登录失败
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 用户名或密码错误
          headers: {}
      security: []
  /posts/create/:
    post:
      summary: 创建帖子
      deprecated: false
      description: 创建新帖子（需要JWT认证）
      tags:
        - 帖子管理
      parameters:
        - name: Authorization
          in: header
          description: ''
          required: false
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6InRlc3R1c2VyIiwiZXhwIjoxNzUyOTE4Mzc3fQ.LNqL4B3dvgc7Jwe8Ku0R6DPLLXnbX9J7bceyOlWQmY4
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - content
              properties:
                title:
                  type: string
                  description: 帖子标题
                  example: 我的第一篇帖子
                content:
                  type: string
                  description: 帖子内容
                  example: 这是帖子的详细内容...
            examples: {}
      responses:
        '200':
          description: 创建成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: 发帖成功
                  post_id:
                    type: integer
                    example: 1
          headers: {}
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 标题和内容不能为空
          headers: {}
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 未提供有效的JWT令牌
          headers: {}
      security: []
  /posts/detail/{post_id}/:
    get:
      summary: 获取帖子详细信息
      deprecated: false
      description: 获取指定帖子的详细信息，包含所有回复（无需认证）
      tags:
        - 帖子管理
      parameters:
        - name: post_id
          in: path
          description: 帖子ID
          required: true
          example: 1
          schema:
            type: integer
        - name: Authorization
          in: header
          description: ''
          required: false
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6InRlc3R1c2VyIiwiZXhwIjoxNzUyOTE4Mzc3fQ.LNqL4B3dvgc7Jwe8Ku0R6DPLLXnbX9J7bceyOlWQmY4
          schema:
            type: string
      responses:
        '200':
          description: 获取成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  post:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      title:
                        type: string
                        example: 帖子标题
                      content:
                        type: string
                        example: 帖子内容
                      author:
                        type: string
                        example: username
                      created_at:
                        type: string
                        format: date-time
                        example: '2024-01-01T12:00:00Z'
                      updated_at:
                        type: string
                        format: date-time
                        example: '2024-01-01T12:00:00Z'
                      reply_count:
                        type: integer
                        example: 5
                      replies:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            content:
                              type: string
                              example: 回复内容
                            author:
                              type: string
                              example: username
                            created_at:
                              type: string
                              format: date-time
                              example: '2024-01-01T12:00:00Z'
                            updated_at:
                              type: string
                              format: date-time
                              example: '2024-01-01T12:00:00Z'
                            parent_reply_id:
                              type: integer
                              nullable: true
                              example: null
                            child_replies:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: integer
                                    example: 2
                                  content:
                                    type: string
                                    example: 子回复内容
                                  author:
                                    type: string
                                    example: username
                                  created_at:
                                    type: string
                                    format: date-time
                                    example: '2024-01-01T12:00:00Z'
                                  parent_reply_id:
                                    type: integer
                                    example: 1
          headers: {}
        '404':
          description: 帖子不存在
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 帖子不存在
          headers: {}
      security: []
  /posts/reply/create/{post_id}/:
    post:
      summary: 创建回复
      deprecated: false
      description: 为指定帖子创建回复，支持嵌套回复（需要JWT认证）
      tags:
        - 帖子管理
      parameters:
        - name: post_id
          in: path
          description: 帖子ID
          required: true
          example: 1
          schema:
            type: integer
        - name: Authorization
          in: header
          description: ''
          required: false
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6InRlc3R1c2VyIiwiZXhwIjoxNzUyOTE4Mzc3fQ.LNqL4B3dvgc7Jwe8Ku0R6DPLLXnbX9J7bceyOlWQmY4
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
                  description: 回复内容
                  example: 这是一个回复
                parent_reply_id:
                  type: integer
                  description: 父回复ID（可选，用于嵌套回复）
                  example: 1
            examples: {}
      responses:
        '200':
          description: 回复成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  msg:
                    type: string
                    example: 回复成功
                  reply:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      content:
                        type: string
                        example: 回复内容
                      author:
                        type: string
                        example: username
                      created_at:
                        type: string
                        format: date-time
                        example: '2024-01-01T12:00:00Z'
                      parent_reply_id:
                        type: integer
                        nullable: true
                        example: null
          headers: {}
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 回复内容不能为空
          headers: {}
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 未提供有效的JWT令牌
          headers: {}
        '404':
          description: 帖子或父回复不存在
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 帖子不存在
          headers: {}
      security: []
  /posts/reply/update/{reply_id}/:
    post:
      summary: 更新回复
      deprecated: false
      description: 更新指定回复（需要JWT认证，仅作者可改）
      tags:
        - 帖子管理
      parameters:
        - name: reply_id
          in: path
          description: 回复ID
          required: true
          example: 1
          schema:
            type: integer
        - name: Authorization
          in: header
          description: ''
          required: false
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6InRlc3R1c2VyIiwiZXhwIjoxNzUyOTE4Mzc3fQ.LNqL4B3dvgc7Jwe8Ku0R6DPLLXnbX9J7bceyOlWQmY4
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
                  description: 新的回复内容
                  example: 更新后的回复内容
            examples: {}
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  msg:
                    type: string
                    example: 回复更新成功
          headers: {}
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 回复内容不能为空
          headers: {}
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 未提供有效的JWT令牌
          headers: {}
        '403':
          description: 权限不足
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 无权限修改他人回复
          headers: {}
        '404':
          description: 回复不存在
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 回复不存在
          headers: {}
      security: []
  /posts/reply/delete/{reply_id}/:
    post:
      summary: 删除回复
      deprecated: false
      description: 删除指定回复（需要JWT认证，仅作者可删）
      tags:
        - 帖子管理
      parameters:
        - name: reply_id
          in: path
          description: 回复ID
          required: true
          example: 1
          schema:
            type: integer
        - name: Authorization
          in: header
          description: ''
          required: false
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6InRlc3R1c2VyIiwiZXhwIjoxNzUyOTE4Mzc3fQ.LNqL4B3dvgc7Jwe8Ku0R6DPLLXnbX9J7bceyOlWQmY4
          schema:
            type: string
      responses:
        '200':
          description: 删除成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  msg:
                    type: string
                    example: 回复删除成功
          headers: {}
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 未提供有效的JWT令牌
          headers: {}
        '403':
          description: 权限不足
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 无权限删除他人回复
          headers: {}
        '404':
          description: 回复不存在
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 回复不存在
          headers: {}
      security: []
  /posts/delete/{post_id}/:
    delete:
      summary: 删除帖子
      deprecated: false
      description: 删除指定帖子（需要JWT认证，仅作者可删）
      tags:
        - 帖子管理
      parameters:
        - name: post_id
          in: path
          description: 帖子ID
          required: true
          example: 1
          schema:
            type: integer
        - name: Authorization
          in: header
          description: ''
          required: false
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6InRlc3R1c2VyIiwiZXhwIjoxNzUyOTE4Mzc3fQ.LNqL4B3dvgc7Jwe8Ku0R6DPLLXnbX9J7bceyOlWQmY4
          schema:
            type: string
      responses:
        '200':
          description: 删除成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: 删除成功
          headers: {}
        '403':
          description: 权限不足
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 无权限删除他人帖子
          headers: {}
        '404':
          description: 帖子不存在
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 帖子不存在
          headers: {}
      security: []
    post:
      summary: 删除帖子
      deprecated: false
      description: 删除指定帖子（需要JWT认证，仅作者可删）
      tags:
        - 帖子管理
      parameters:
        - name: post_id
          in: path
          description: 帖子ID
          required: true
          example: 1
          schema:
            type: integer
        - name: Authorization
          in: header
          description: ''
          required: false
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6InRlc3R1c2VyIiwiZXhwIjoxNzUyOTE4Mzc3fQ.LNqL4B3dvgc7Jwe8Ku0R6DPLLXnbX9J7bceyOlWQmY4
          schema:
            type: string
      responses:
        '200':
          description: 删除成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: 删除成功
          headers: {}
        '403':
          description: 权限不足
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 无权限删除他人帖子
          headers: {}
        '404':
          description: 帖子不存在
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 帖子不存在
          headers: {}
      security: []
  /posts/update/{post_id}/:
    post:
      summary: 更新帖子
      deprecated: false
      description: 更新指定帖子（需要JWT认证，仅作者可改）
      tags:
        - 帖子管理
      parameters:
        - name: post_id
          in: path
          description: 帖子ID
          required: true
          example: 1
          schema:
            type: integer
        - name: Authorization
          in: header
          description: ''
          required: false
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6InRlc3R1c2VyIiwiZXhwIjoxNzUyOTE4Mzc3fQ.LNqL4B3dvgc7Jwe8Ku0R6DPLLXnbX9J7bceyOlWQmY4
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 帖子标题（可选）
                  example: 更新后的标题
                content:
                  type: string
                  description: 帖子内容（可选）
                  example: 更新后的内容
            examples: {}
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: 修改成功
          headers: {}
        '403':
          description: 权限不足
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 无权限修改他人帖子
          headers: {}
        '404':
          description: 帖子不存在
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 帖子不存在
          headers: {}
      security: []
  /posts/list/:
    get:
      summary: 获取帖子列表
      deprecated: false
      description: 分页获取所有帖子（无需认证）
      tags:
        - 帖子管理
      parameters:
        - name: page
          in: query
          description: 页码
          required: false
          schema:
            type: integer
            default: 1
        - name: page_size
          in: query
          description: 每页数量
          required: false
          schema:
            type: integer
            default: 10
        - name: Authorization
          in: header
          description: ''
          required: false
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6InRlc3R1c2VyIiwiZXhwIjoxNzUyOTE4Mzc3fQ.LNqL4B3dvgc7Jwe8Ku0R6DPLLXnbX9J7bceyOlWQmY4
          schema:
            type: string
      responses:
        '200':
          description: 获取成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        title:
                          type: string
                          example: 帖子标题
                        content:
                          type: string
                          example: 帖子内容
                        author:
                          type: string
                          example: username
                        created_at:
                          type: string
                          format: date-time
                          example: '2024-01-01T12:00:00Z'
                        updated_at:
                          type: string
                          format: date-time
                          example: '2024-01-01T12:00:00Z'
                        reply_count:
                          type: integer
                          example: 5
                  total:
                    type: integer
                    description: 总帖子数
                    example: 100
                  num_pages:
                    type: integer
                    description: 总页数
                    example: 10
                  current_page:
                    type: integer
                    description: 当前页码
                    example: 1
          headers: {}
        '405':
          description: 方法不允许
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 仅支持GET请求
          headers: {}
      security: []
  /posts/chat/:
    post:
      summary: AI对话
      deprecated: false
      description: 与讯飞大模型进行对话（流式响应）
      tags:
        - AI对话
      parameters:
        - name: Authorization
          in: header
          description: ''
          required: false
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6InRlc3R1c2VyIiwiZXhwIjoxNzUyOTE4Mzc3fQ.LNqL4B3dvgc7Jwe8Ku0R6DPLLXnbX9J7bceyOlWQmY4
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - message
              properties:
                message:
                  type: string
                  description: 用户消息
                  example: 你好，请介绍一下Python
            examples: {}
      responses:
        '200':
          description: 流式响应
          content:
            text/plain:
              schema:
                type: string
                description: Server-Sent Events格式的流式响应
                example: |
                  data: {"content": "你好！Python是一种高级编程语言..."}

                  data: {"content": "它具有简洁的语法和强大的功能..."}

                  data: {"content": "希望这个介绍对你有帮助！"}
          headers: {}
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 消息不能为空
          headers: {}
        '405':
          description: 方法不允许
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 仅支持POST请求
          headers: {}
      security: []
  /users/profile/:
    get:
      summary: 获取个人信息
      deprecated: false
      description: 获取当前用户的个人信息（需要JWT认证）
      tags:
        - 个人信息管理
      parameters: []
      responses:
        '200':
          description: 获取成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  profile:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      username:
                        type: string
                        example: testuser
                      email:
                        type: string
                        example: user@example.com
                      first_name:
                        type: string
                        example: 张
                      last_name:
                        type: string
                        example: 三
                      phone:
                        type: string
                        example: 13800138000
                      avatar:
                        type: string
                        example: /media/avatars/user1.jpg
                      target_position:
                        type: object
                        properties:
                          job_position_id:
                            type: integer
                            description: 公司岗位的唯一标识符
                          position_name:
                            type: string
                            description: 岗位名称
                          company_name:
                            type: string
                          expected_salary:
                            type: array
                            items:
                              type: integer
                            description: 例如[25,30]，单位k
                        required:
                          - company_name
                          - expected_salary
                          - job_position_id
                          - position_name
                        nullable: true
                      date_joined:
                        type: string
                        format: date-time
                        example: '2024-01-01T12:00:00Z'
                      last_login:
                        type: string
                        format: date-time
                        example: '2024-01-01T12:00:00Z'
                      resume:
                        type: array
                        items:
                          type: object
                          properties:
                            resume_id:
                              type: integer
                              example: 1
                            resume_name:
                              type: string
                              example: 后端开发简历
                            expected_position:
                              type: string
                              example: 后端工程师
                            updated_at:
                              type: string
                              format: date-time
                              description: 最后更新时间
                              example: '2024-01-01T12:00:00Z'
                            completed:
                              type: boolean
                              example: true
                          required:
                            - resume_id
                            - resume_name
                            - expected_position
                            - updated_at
                            - completed
                        description: 用户的简历列表
          headers: {}
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 未提供有效的JWT令牌
          headers: {}
      security: []
  /users/profile/update/:
    post:
      summary: 更新个人信息
      deprecated: false
      description: 更新当前用户的个人信息（需要JWT认证）
      tags:
        - 个人信息管理
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 邮箱地址
                  example: newemail@example.com
                first_name:
                  type: string
                  description: 名
                  example: 张
                last_name:
                  type: string
                  description: 姓
                  example: 三
                phone:
                  type: string
                  description: 手机号码
                  example: 13800138000
                avatar:
                  type: string
                  description: 头像URL
                  example: /media/avatars/new_avatar.jpg
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  msg:
                    type: string
                    example: 个人信息更新成功
          headers: {}
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 未提供有效的JWT令牌
          headers: {}
      security: []
  /users/resume/list/:
    get:
      summary: 获取用户所有简历列表
      deprecated: false
      description: 获取当前用户的所有简历列表（需要JWT认证）
      tags:
        - 简历管理
      parameters:
        - name: Authorization
          in: header
          description: ''
          required: false
          example: ''
          schema:
            type: string
      responses:
        '200':
          description: 获取成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  resumes:
                    type: array
                    items:
                      type: object
                      properties:
                        resume_id:
                          type: integer
                          example: 1
                        resume_name:
                          type: string
                          example: 后端开发简历
                        expected_position:
                          type: string
                          example: 后端工程师
                        updated_at:
                          type: string
                          format: date-time
                          example: '2024-01-01T12:00:00Z'
                        completed:
                          type: boolean
                          example: true
                  total:
                    type: integer
                    example: 3
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 未提供有效的JWT令牌
      security: []
  /users/resume/:
    get:
      summary: 获取简历详细信息
      deprecated: false
      description: 获取指定简历的完整信息（需要JWT认证）
      tags:
        - 简历管理
      parameters:
        - name: resume_id
          in: query
          description: 简历ID
          required: true
          schema:
            type: integer
        - name: Authorization
          in: header
          description: ''
          required: false
          example: ''
          schema:
            type: string
      responses:
        '200':
          description: 获取成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  resume:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 张三
                      age:
                        type: integer
                        example: 25
                      graduation_date:
                        type: string
                        format: date
                        example: '2024-06-01'
                      education_level:
                        type: string
                        example: 本科
                      expected_position:
                        type: string
                        example: 软件工程师
                      created_at:
                        type: string
                        format: date-time
                        updated_at:
                          type: string
                          format: date-time
                          example: '2024-01-01T12:00:00Z'
                        reply_count:
                          type: integer
                          example: 5
                        example: '2024-01-01T12:00:00Z'
                      updated_at:
                        type: string
                      work_experiences:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            start_date:
                              type: string
                              format: date
                              example: '2023-01-01'
                            end_date:
                              type: string
                              format: date
                              nullable: true
                              example: '2023-12-31'
                            company_name:
                              type: string
                              example: 某科技有限公司
                            department:
                              type: string
                              example: 技术部
                            position:
                              type: string
                              example: 软件工程师
                            work_content:
                              type: string
                              example: 负责后端开发工作
                            is_internship:
                              type: boolean
                              example: false
                      project_experiences:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            start_date:
                              type: string
                              format: date
                              example: '2023-06-01'
                            end_date:
                              type: string
                              format: date
                              nullable: true
                              example: '2023-08-31'
                            project_name:
                              type: string
                              example: 在线论坛系统
                            project_role:
                              type: string
                              example: 后端开发
                            project_link:
                              type: string
                              example: https://github.com/example/forum
                            project_content:
                              type: string
                              example: 使用Django开发论坛后端API
                      education_experiences:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            start_date:
                              type: string
                              format: date
                              example: '2020-09-01'
                            end_date:
                              type: string
                              format: date
                              nullable: true
                              example: '2024-06-01'
                            school_name:
                              type: string
                              example: 某大学
                            education_level:
                              type: string
                              example: 本科
                            major:
                              type: string
                              example: 计算机科学与技术
                            school_experience:
                              type: string
                              example: 获得优秀毕业生称号
                      custom_sections:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            title:
                              type: string
                              example: 技能证书
                            content:
                              type: string
                              example: 获得Python开发工程师认证
                    required:
                      - updated_at
                    nullable: true
                  msg:
                    type: string
                    example: 简历不存在
          headers: {}
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 未提供有效的JWT令牌
          headers: {}
      security: []
  /users/resume/create/:
    post:
      summary: 创建或更新简历基本信息
      deprecated: false
      description: 创建或更新简历的基本信息（需要JWT认证）
      tags:
        - 简历管理
      parameters:
        - name: Authorization
          in: header
          description: ''
          required: false
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6InRlc3R1c2VyIiwiZXhwIjoxNzUyOTMxMDQwfQ.SMNptBXHCgXC2mHtNMBWnPmK3_JxbexqpAJ6bO6tAxo
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                resume_id:
                  type: integer
                  description: 简历ID（更新时必需，创建时不传）
                  example: 1
                resume_name:
                  type: string
                  description: 简历名称
                  example: 后端开发简历
                name:
                  type: string
                  description: 姓名
                  example: 张三
                age:
                  type: integer
                  description: 年龄
                  example: 25
                graduation_date:
                  type: string
                  format: date
                  description: 毕业时间
                  example: '2024-06-01'
                education_level:
                  type: string
                  description: 学历
                  example: 本科
                expected_position:
                  type: string
                  description: 期望职位
                  example: 软件工程师
                completed:
                  type: boolean
                  description: 是否完成
                  example: false
            examples: {}
      responses:
        '200':
          description: 操作成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  msg:
                    type: string
                    example: 简历创建成功
          headers: {}
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 未提供有效的JWT令牌
          headers: {}
      security: []
  /users/resume/work/:
    post:
      summary: 管理工作经历
      deprecated: false
      description: 创建或更新工作经历（需要JWT认证）。创建时不传work_id，后端自动生成ID；更新时传work_id，后端通过用户ID验证权限
      tags:
        - 简历管理
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                resume_id:
                  type: integer
                work_id:
                  type: integer
                  description: 工作经历ID（更新时必需，创建时不传。ID由后端自动生成，前端通过查询获取）
                  example: 1
                start_date:
                  type: string
                  format: date
                  description: 开始时间
                  example: '2023-01-01'
                end_date:
                  type: string
                  format: date
                  description: 结束时间（可选）
                  example: '2023-12-31'
                company_name:
                  type: string
                  description: 公司名称
                  example: 某科技有限公司
                department:
                  type: string
                  description: 部门
                  example: 技术部
                position:
                  type: string
                  description: 职位
                  example: 软件工程师
                work_content:
                  type: string
                  description: 工作内容
                  example: 负责后端开发工作
                is_internship:
                  type: boolean
                  description: 是否为实习
                  example: false
              required:
                - resume_id
            examples: {}
      responses:
        '200':
          description: 操作成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  msg:
                    type: string
                    example: 工作经历创建成功
                  work_experience_id:
                    type: integer
                    example: 1
          headers: {}
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 缺少必要参数
          headers: {}
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 未提供有效的JWT令牌
          headers: {}
        '404':
          description: 工作经历不存在
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 工作经历不存在
          headers: {}
      security: []
  /users/resume/work/delete/:
    delete:
      summary: 删除工作经历
      deprecated: false
      description: 删除指定的工作经历（需要JWT认证）。通过用户ID验证权限，确保只能删除自己的经历
      tags:
        - 简历管理
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - work_id
                - resume_id
              properties:
                resume_id:
                  type: integer
                work_id:
                  type: integer
                  description: 工作经历ID（由后端自动生成，前端通过查询获取）
                  example: 1
            examples: {}
      responses:
        '200':
          description: 删除成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  msg:
                    type: string
                    example: 工作经历删除成功
          headers: {}
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 缺少work_id参数
          headers: {}
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 未提供有效的JWT令牌
          headers: {}
        '404':
          description: 工作经历不存在
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 工作经历不存在
          headers: {}
      security: []
  /users/resume/project/:
    post:
      summary: 管理项目经历
      deprecated: false
      description: 创建或更新项目经历（需要JWT认证）。创建时不传project_id，后端自动生成ID；更新时传project_id，后端通过用户ID验证权限
      tags:
        - 简历管理
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                project_id:
                  type: integer
                  description: 项目经历ID（更新时必需，创建时不传。ID由后端自动生成，前端通过查询获取）
                  example: 1
                start_date:
                  type: string
                  format: date
                  description: 开始时间
                  example: '2023-06-01'
                end_date:
                  type: string
                  format: date
                  description: 结束时间（可选）
                  example: '2023-08-31'
                project_name:
                  type: string
                  description: 项目名称
                  example: 在线论坛系统
                project_role:
                  type: string
                  description: 项目角色
                  example: 后端开发
                project_link:
                  type: string
                  description: 项目链接
                  example: https://github.com/example/forum
                project_content:
                  type: string
                  description: 项目内容
                  example: 使用Django开发论坛后端API
                resume_id:
                  type: integer
              required:
                - resume_id
            examples: {}
      responses:
        '200':
          description: 操作成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  msg:
                    type: string
                    example: 项目经历创建成功
                  project_experience_id:
                    type: integer
                    example: 1
          headers: {}
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 缺少必要参数
          headers: {}
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 未提供有效的JWT令牌
          headers: {}
        '404':
          description: 项目经历不存在
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 项目经历不存在
          headers: {}
      security: []
  /users/resume/project/delete/:
    delete:
      summary: 删除项目经历
      deprecated: false
      description: 删除指定的项目经历（需要JWT认证）。通过用户ID验证权限，确保只能删除自己的经历
      tags:
        - 简历管理
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - project_id
                - resume_id
              properties:
                resume_id:
                  type: integer
                project_id:
                  type: integer
                  description: 项目经历ID（由后端自动生成，前端通过查询获取）
                  example: 1
            examples: {}
      responses:
        '200':
          description: 删除成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  msg:
                    type: string
                    example: 项目经历删除成功
          headers: {}
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 缺少project_id参数
          headers: {}
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 未提供有效的JWT令牌
          headers: {}
        '404':
          description: 项目经历不存在
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 项目经历不存在
          headers: {}
      security: []
  /users/resume/education/:
    post:
      summary: 管理教育经历
      deprecated: false
      description: >-
        创建或更新教育经历（需要JWT认证）。创建时不传education_id，后端自动生成ID；更新时传education_id，后端通过用户ID验证权限
      tags:
        - 简历管理
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                resume_id:
                  type: integer
                education_id:
                  type: integer
                  description: 教育经历ID（更新时必需，创建时不传。ID由后端自动生成，前端通过查询获取）
                  example: 1
                start_date:
                  type: string
                  format: date
                  description: 开始时间
                  example: '2020-09-01'
                end_date:
                  type: string
                  format: date
                  description: 结束时间（可选）
                  example: '2024-06-01'
                school_name:
                  type: string
                  description: 学校名称
                  example: 某大学
                education_level:
                  type: string
                  description: 学历
                  example: 本科
                major:
                  type: string
                  description: 专业
                  example: 计算机科学与技术
                school_experience:
                  type: string
                  description: 学校经历
                  example: 获得优秀毕业生称号
              required:
                - resume_id
            examples: {}
      responses:
        '200':
          description: 操作成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  msg:
                    type: string
                    example: 教育经历创建成功
                  education_experience_id:
                    type: integer
                    example: 1
          headers: {}
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 缺少必要参数
          headers: {}
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 未提供有效的JWT令牌
          headers: {}
        '404':
          description: 教育经历不存在
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 教育经历不存在
          headers: {}
      security: []
  /users/resume/education/delete/:
    delete:
      summary: 删除教育经历
      deprecated: false
      description: 删除指定的教育经历（需要JWT认证）。通过用户ID验证权限，确保只能删除自己的经历
      tags:
        - 简历管理
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - education_id
                - resume_id
              properties:
                resume_id:
                  type: integer
                education_id:
                  type: integer
                  description: 教育经历ID（由后端自动生成，前端通过查询获取）
                  example: 1
            examples: {}
      responses:
        '200':
          description: 删除成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  msg:
                    type: string
                    example: 教育经历删除成功
          headers: {}
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 缺少education_id参数
          headers: {}
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 未提供有效的JWT令牌
          headers: {}
        '404':
          description: 教育经历不存在
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 教育经历不存在
          headers: {}
      security: []
  /users/resume/custom/:
    post:
      summary: 管理自定义部分
      deprecated: false
      description: 创建或更新自定义部分（需要JWT认证）。创建时不传custom_id，后端自动生成ID；更新时传custom_id，后端通过用户ID验证权限
      tags:
        - 简历管理
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                resume_id:
                  type: integer
                custom_id:
                  type: integer
                  description: 自定义部分ID（更新时必需，创建时不传。ID由后端自动生成，前端通过查询获取）
                  example: 1
                title:
                  type: string
                  description: 标题
                  example: 技能证书
                content:
                  type: string
                  description: 内容
                  example: 获得Python开发工程师认证
              required:
                - resume_id
            examples: {}
      responses:
        '200':
          description: 操作成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  msg:
                    type: string
                    example: 自定义部分创建成功
                  custom_section_id:
                    type: integer
                    example: 1
          headers: {}
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 缺少必要参数
          headers: {}
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 未提供有效的JWT令牌
          headers: {}
        '404':
          description: 自定义部分不存在
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 自定义部分不存在
          headers: {}
      security: []
  /users/resume/custom/delete/:
    delete:
      summary: 删除自定义部分
      deprecated: false
      description: 删除指定的自定义部分（需要JWT认证）。通过用户ID验证权限，确保只能删除自己的经历
      tags:
        - 简历管理
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - custom_id
                - resume_id
              properties:
                resume_id:
                  type: integer
                custom_id:
                  type: integer
                  description: 自定义部分ID（由后端自动生成，前端通过查询获取）
                  example: 1
            examples: {}
      responses:
        '200':
          description: 删除成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  msg:
                    type: string
                    example: 自定义部分删除成功
          headers: {}
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 缺少custom_id参数
          headers: {}
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 未提供有效的JWT令牌
          headers: {}
        '404':
          description: 自定义部分不存在
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 自定义部分不存在
          headers: {}
      security: []
  /code/run-code/:
    post:
      summary: 运行代码
      deprecated: false
      description: 发请求调用Judge0API
      tags: []
      parameters:
        - name: source_code
          in: query
          description: ''
          required: true
          schema:
            type: string
        - name: language_id
          in: query
          description: ''
          required: true
          schema:
            type: number
        - name: stdin
          in: query
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
          headers: {}
      security: []
  /interviews/create/:
    post:
      summary: 创建面试
      deprecated: false
      description: 创建一个新的面试记录
      tags:
        - interviews
      parameters:
        - name: Authorization
          in: header
          description: ''
          required: false
          example: ''
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                job_position_id:
                  type: integer
                  description: 关联的岗位ID（可选）
                interview_time:
                  type: string
                  format: date-time
                  description: 面试时间（可选，默认为当前时间）
                position_name:
                  type: string
                  description: 岗位名称
                position_type:
                  type: string
                  enum:
                    - backend
                    - frontend
                    - pm
                    - qa
                    - algo
                  description: 岗位类型
                company_name:
                  type: string
                  description: 公司名称（可选）
                position_description:
                  type: string
                  description: 岗位详细信息
                position_requirements:
                  type: string
                  description: 岗位要求（可选）
              required:
                - position_name
                - position_type
                - position_description
            examples: {}
      responses:
        '201':
          description: 面试创建成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: 面试ID
                  interview_time:
                    type: string
                    format: date-time
                    description: 面试时间
                  position_name:
                    type: string
                    description: 岗位名称
                  company_name:
                    type: string
                    description: 公司名称
                  position_type:
                    type: string
                    description: 岗位类型
          headers: {}
        '400':
          description: 请求参数错误
          headers: {}
        '401':
          description: 未认证
          headers: {}
        '403':
          description: 权限不足
          headers: {}
      security: []
  /interviews/list/:
    get:
      summary: 获取用户面试列表
      deprecated: false
      description: 获取当前用户的所有面试记录
      tags:
        - interviews
      parameters:
        - name: Authorization
          in: header
          description: ''
          required: false
          example: ''
          schema:
            type: string
      responses:
        '200':
          description: 获取成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  interviews:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: 面试ID
                        interview_time:
                          type: string
                          format: date-time
                          description: 面试时间
                        position_name:
                          type: string
                          description: 岗位名称
                        company_name:
                          type: string
                          description: 公司名称
                        position_type:
                          type: string
                          description: 岗位类型
                        created_at:
                          type: string
                          format: date-time
                          description: 创建时间
                        updated_at:
                          type: string
                          format: date-time
                          description: 更新时间
                  total:
                    type: integer
                    description: 面试记录总数
          headers: {}
        '401':
          description: 未认证
          headers: {}
        '403':
          description: 权限不足
          headers: {}
      security: []
  /interviews/coding-problems/:
    get:
      tags:
        - interviews
      summary: 获取代码题列表（分页）
      security:
        - BearerAuth: []
      parameters:
        - name: page
          in: query
          description: 页码（从1开始）
          schema:
            type: integer
            default: 1
        - name: page_size
          in: query
          description: 每页数量（默认10，最大100）
          schema:
            type: integer
            default: 10
        - name: difficulty
          in: query
          description: 难度筛选
          schema:
            type: string
            enum: [easy, medium, hard]
        - name: position_type
          in: query
          description: 岗位类型筛选
          schema:
            type: string
            enum: [backend, frontend, algo, pm, qa]
        - name: tag
          in: query
          description: 标签筛选
          schema:
            type: string
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: 总记录数
                  next:
                    type: string
                    nullable: true
                    description: 下一页URL
                  previous:
                    type: string
                    nullable: true
                    description: 上一页URL
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        number:
                          type: string
                          description: 题目序号（如LC001）
                        title:
                          type: string
                        difficulty:
                          type: string
                          enum: [easy, medium, hard]
                        tags:
                          type: array
                          items:
                            type: string
                        companies:
                          type: array
                          items:
                            type: string
                        position_types:
                          type: array
                          items:
                            type: string
                        created_at:
                          type: string
                          format: date-time
                        updated_at:
                          type: string
                          format: date-time
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  
  /interviews/coding-problems/{problem_id}/:
    get:
      tags:
        - interviews
      summary: 获取代码题详细信息
      security:
        - BearerAuth: []
      parameters:
        - name: problem_id
          in: path
          required: true
          description: 代码题ID
          schema:
            type: integer
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  number:
                    type: string
                    description: 题目序号（如LC001）
                  title:
                    type: string
                  description:
                    type: string
                  difficulty:
                    type: string
                    enum: [easy, medium, hard]
                  tags:
                    type: array
                    items:
                      type: string
                  companies:
                    type: array
                    items:
                      type: string
                  position_types:
                    type: array
                    items:
                      type: string
                  examples:
                    type: array
                    items:
                      type: object
                      properties:
                        input_data:
                          type: string
                        output_data:
                          type: string
                        explanation:
                          type: string
                        order:
                          type: integer
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: 代码题不存在

  /positions/positions/:
    get:
      summary: 获取职位列表
      deprecated: false
      description: 分页获取所有职位信息
      tags:
        - 职位管理
      parameters:
        - name: page
          in: query
          description: 页码（从1开始）
          schema:
            type: integer
            default: 1
        - name: ordering
          in: query
          description: 排序字段（可选，支持id、company_name等字段，前缀-表示降序）
          schema:
            type: string
            example: "-id"
      responses:
        '200':
          description: 获取成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: 总记录数
                  next:
                    type: string
                    nullable: true
                    description: 下一页URL
                  previous:
                    type: string
                    nullable: true
                    description: 上一页URL
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        position_name:
                          type: string
                          example: "后端开发工程师"
                        company_name:
                          type: string
                          example: "某科技公司"
                        position_url:
                          type: string
                          example: "https://example.com/job/123"

  /positions/positions/search/:
    get:
      summary: 搜索职位
      deprecated: false
      description: 根据关键词搜索职位信息（支持职位名称和公司名称）
      tags:
        - 职位管理
      parameters:
        - name: keyword
          in: query
          description: 搜索关键词
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: 页码（从1开始）
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: 搜索成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: 总记录数
                  next:
                    type: string
                    nullable: true
                    description: 下一页URL
                  previous:
                    type: string
                    nullable: true
                    description: 上一页URL
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        position_name:
                          type: string
                          example: "后端开发工程师"
                        company_name:
                          type: string
                          example: "某科技公司"
                        position_url:
                          type: string
                          example: "https://example.com/job/123"
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "请提供搜索关键词"

  /positions/positions/{id}/:
    get:
      summary: 获取职位详情
      deprecated: false
      description: 获取指定职位的详细信息
      tags:
        - 职位管理
      parameters:
        - name: id
          in: path
          description: 职位ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 获取成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  position_name:
                    type: string
                    example: "后端开发工程师"
                  company_name:
                    type: string
                    example: "某科技公司"
                  position_url:
                    type: string
                    example: "https://example.com/job/123"
        '404':
          description: 职位不存在
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "职位不存在"

  /knowledge-base/generate-questions/:
    post:
      summary: 生成面试问题
      deprecated: false
      description: 根据职位类型生成面试问题
      tags:
        - 知识库管理
      parameters:
        - name: Authorization
          in: header
          description: JWT认证令牌
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - position_type
              properties:
                position_type:
                  type: string
                  enum: [backend, frontend, algo, pm, qa]
                  description: 职位类型
      responses:
        '200':
          description: 成功生成问题
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  questions:
                    type: array
                    items:
                      type: object
                      properties:
                        question:
                          type: string
                          example: "什么是RESTful API？"
                        answer:
                          type: string
                          example: "RESTful API是一种软件架构风格..."
        '400':
          description: 参数错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "职位类型不正确"

  /knowledge-base/interview-history/:
    get:
      summary: 获取面试历史
      deprecated: false
      description: 获取用户的面试问答历史记录
      tags:
        - 知识库管理
      parameters:
        - name: Authorization
          in: header
          description: JWT认证令牌
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 获取成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  history:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        question:
                          type: string
                          example: "什么是RESTful API？"
                        answer:
                          type: string
                          example: "用户的回答..."
                        created_at:
                          type: string
                          format: date-time

  /knowledge-base/interview-detail/{interview_id}/:
    get:
      summary: 获取面试详情
      deprecated: false
      description: 获取特定面试的详细信息
      tags:
        - 知识库管理
      parameters:
        - name: Authorization
          in: header
          description: JWT认证令牌
          required: true
          schema:
            type: string
        - name: interview_id
          in: path
          required: true
          description: 面试ID
          schema:
            type: integer
      responses:
        '200':
          description: 获取成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  interview:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      questions:
                        type: array
                        items:
                          type: object
                          properties:
                            question:
                              type: string
                              example: "什么是RESTful API？"
                            answer:
                              type: string
                              example: "用户的回答..."
                            ai_analysis:
                              type: string
                              example: "回答分析..."
                      created_at:
                        type: string
                        format: date-time
        '404':
          description: 面试不存在
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "面试记录不存在"

  /webrtc/test/:
    get:
      summary: WebSocket测试页面
      deprecated: false
      description: 返回WebSocket测试用的HTML页面
      tags:
        - WebRTC
      responses:
        '200':
          description: 成功返回HTML页面
          content:
            text/html:
              schema:
                type: string

  /webrtc/audio-test/:
    get:
      summary: 音频WebSocket测试页面
      deprecated: false
      description: 返回音频WebSocket测试用的HTML页面
      tags:
        - WebRTC
      responses:
        '200':
          description: 成功返回HTML页面
          content:
            text/html:
              schema:
                type: string

components:
  schemas: {}
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT认证令牌，格式为 "Bearer <token>"
servers: []
security: []
