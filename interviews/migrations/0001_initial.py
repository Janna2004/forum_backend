# Generated by Django 5.2.4 on 2025-07-22 17:56

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("users", "0004_user_target_company_name_user_target_position_id_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CodingProblem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "number",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="题目序号"
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="题目标题")),
                ("description", models.TextField(verbose_name="题目描述")),
                (
                    "difficulty",
                    models.CharField(
                        choices=[
                            ("easy", "简单"),
                            ("medium", "中等"),
                            ("hard", "困难"),
                        ],
                        max_length=10,
                        verbose_name="难度等级",
                    ),
                ),
                ("tags", models.JSONField(default=list, verbose_name="题目标签")),
                ("companies", models.JSONField(default=list, verbose_name="出题公司")),
                (
                    "position_types",
                    models.JSONField(default=list, verbose_name="适用岗位类型"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
            ],
            options={
                "verbose_name": "代码题",
                "verbose_name_plural": "代码题",
                "ordering": ["number"],
            },
        ),
        migrations.CreateModel(
            name="CodingExample",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("input_data", models.TextField(verbose_name="样例输入")),
                ("output_data", models.TextField(verbose_name="样例输出")),
                ("explanation", models.TextField(blank=True, verbose_name="解释说明")),
                ("order", models.IntegerField(default=1, verbose_name="顺序")),
                (
                    "problem",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="examples",
                        to="interviews.codingproblem",
                        verbose_name="代码题",
                    ),
                ),
            ],
            options={
                "verbose_name": "代码题样例",
                "verbose_name_plural": "代码题样例",
                "ordering": ["problem", "order"],
            },
        ),
        migrations.CreateModel(
            name="Interview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("interview_time", models.DateTimeField(verbose_name="面试时间")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "nowcoder_position_id",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="牛客网岗位ID"
                    ),
                ),
                (
                    "position_name",
                    models.CharField(max_length=100, verbose_name="岗位名称"),
                ),
                (
                    "company_name",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="公司名称"
                    ),
                ),
                ("position_description", models.TextField(verbose_name="岗位详细信息")),
                (
                    "position_requirements",
                    models.TextField(blank=True, null=True, verbose_name="岗位要求"),
                ),
                (
                    "position_type",
                    models.CharField(
                        choices=[
                            ("backend", "后端开发"),
                            ("frontend", "前端开发"),
                            ("pm", "产品经理"),
                            ("qa", "测试"),
                            ("algo", "算法"),
                            ("data", "数据"),
                            ("other", "其他"),
                        ],
                        default="backend",
                        max_length=20,
                        verbose_name="岗位类型",
                    ),
                ),
                (
                    "question_queue",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="存储个性化推荐的面试问题列表",
                        verbose_name="面试问题队列",
                    ),
                ),
                (
                    "resume",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="interviews",
                        to="users.resume",
                        verbose_name="关联简历",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="interviews",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "面试",
                "verbose_name_plural": "面试",
                "ordering": ["-interview_time"],
            },
        ),
        migrations.CreateModel(
            name="InterviewAnswer",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("question", models.TextField(verbose_name="问题")),
                ("answer", models.TextField(verbose_name="答案")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="答题时间"),
                ),
                (
                    "ai_analysis",
                    models.TextField(blank=True, null=True, verbose_name="AI分析结果"),
                ),
                (
                    "knowledge_points",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="该问题涉及的具体知识点列表",
                        verbose_name="问题知识点",
                    ),
                ),
                (
                    "correctness_score",
                    models.FloatField(
                        default=0,
                        help_text="回答正确性评分(1-5分)",
                        verbose_name="答案正确性分数",
                    ),
                ),
                (
                    "professional_knowledge",
                    models.FloatField(default=0, verbose_name="专业知识水平"),
                ),
                (
                    "skill_matching",
                    models.FloatField(default=0, verbose_name="技能匹配度"),
                ),
                (
                    "communication_skills",
                    models.FloatField(default=0, verbose_name="语言表达能力"),
                ),
                (
                    "logical_thinking",
                    models.FloatField(default=0, verbose_name="逻辑思维能力"),
                ),
                (
                    "innovation_ability",
                    models.FloatField(default=0, verbose_name="创新能力"),
                ),
                (
                    "stress_handling",
                    models.FloatField(default=0, verbose_name="应变抗压能力"),
                ),
                (
                    "interview",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="answers",
                        to="interviews.interview",
                        verbose_name="面试",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="interview_answers",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "面试答题记录",
                "verbose_name_plural": "面试答题记录",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="InterviewCodingAnswer",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("code_answer", models.TextField(verbose_name="代码答案")),
                (
                    "language",
                    models.CharField(
                        default="python", max_length=50, verbose_name="编程语言"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="答题时间"),
                ),
                (
                    "interview",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="coding_answers",
                        to="interviews.interview",
                        verbose_name="面试",
                    ),
                ),
                (
                    "problem",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="interviews.codingproblem",
                        verbose_name="代码题",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="coding_answers",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "面试代码题答题记录",
                "verbose_name_plural": "面试代码题答题记录",
                "ordering": ["created_at"],
            },
        ),
    ]
